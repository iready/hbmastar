package view.sun;

import controller.APIOperation;
import model.ViewContent;
import model.view.tabel.EntrustModel;
import model.view.tabel.operaCancle;
import other.entity.api.Get_orders;
import other.utils.SwingUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;

/**
 * Created by Yuquan Zou on 2016/1/1.
 */
public class Entrust {
    final APIOperation api;
    String[] headers;
    private JPanel content;
    private JLabel L1;
    private JButton refresh;
    private JTable entable;

    public Entrust(ViewContent viewContent) {
        JFrame jFrame = new JFrame("委托");
        api = viewContent.getApiOperation();
        $$$setupUI$$$();
        jFrame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        jFrame.setContentPane(this.content);
        SwingUtils.window_centered(jFrame);
        jFrame.setVisible(true);
        refresh.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    List<Get_orders> list = api.get_orders();
                    EntrustModel model = (EntrustModel) entable.getModel();
                    model.setDataVector(data_handle(list), headers);
                    operaCancle operaCancle = new operaCancle(api);
                    entable.getColumnModel().getColumn(5).setCellEditor(operaCancle);
                    entable.getColumnModel().getColumn(5).setCellRenderer(operaCancle);
                } catch (IOException e1) {
                    e1.printStackTrace();
                }
            }
        });
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        headers = new String[]{"id", "类型", "委托价格", "委托数量", "委托时间", "委托操作"};
        try {
            entable = new JTable(new EntrustModel(data_handle(api.get_orders()), headers));
            operaCancle operaCancle = new operaCancle(api);
            entable.getColumnModel().getColumn(5).setCellEditor(operaCancle);
            entable.getColumnModel().getColumn(5).setCellRenderer(operaCancle);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private Object[][] data_handle(List<Get_orders> orderses) {
        int l = 5;
        Object[][] objects = new Object[orderses.size()][l];
        for (int i = 0; i < orderses.size(); i++) {
            Get_orders get_orders = orderses.get(i);
            Object[] object = new Object[l];
            object[0] = get_orders.getId();
            object[1] = get_orders.getType().equals("1") ? "买入" : "卖出";
            object[2] = get_orders.getOrder_price();
            object[3] = get_orders.getOrder_amount();
            object[4] = get_orders.getOrder_time();
            objects[i] = object;
        }
        return objects;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        content = new JPanel();
        content.setLayout(new GridBagLayout());
        L1 = new JLabel();
        L1.setText("当前委托：");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        content.add(L1, gbc);
        refresh = new JButton();
        refresh.setText("刷新");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        content.add(refresh, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(scrollPane1, gbc);
        scrollPane1.setViewportView(entable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return content;
    }
}
