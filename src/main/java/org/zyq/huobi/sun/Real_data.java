package org.zyq.huobi.sun;

import org.zyq.huobi.controller.APIOperation;
import org.zyq.huobi.controller.ResultProxy;
import org.zyq.huobi.other.entity.ViewContent;
import org.apache.log4j.Logger;
import org.zyq.huobi.other.entity.api.Get_account_info;
import org.zyq.huobi.other.entity.api.Ticker;
import org.zyq.huobi.other.entity.api.Ticker_btc_json;
import org.zyq.huobi.other.utils.SwingUtils;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

/**
 * Created by Yuquan Zou on 2015/12/24.
 */
public class Real_data {
    private final APIOperation api;
    private JLabel L1;
    private JLabel username;
    private JLabel L2;
    private JLabel L3;
    private JPanel content;
    private JLabel userprice;
    private JLabel nowprice;
    private JLabel L4;
    private JLabel top;
    private JLabel L5;
    private JLabel low;
    private JLabel L6;
    private JLabel open;
    private JLabel L11;
    private JLabel L12;
    private JLabel RMB;
    private JLabel L13;
    private JLabel BTB;
    private JLabel L21;
    private JLabel L22;
    private JLabel L23;
    private JLabel DGRMB;
    private JLabel DGBTB;
    private JLabel L33;
    private JButton openTrans;
    private JButton openZN;
    private JButton wt;
    private ViewContent viewContent;
    private Logger logger = Logger.getLogger(Real_data.class);

    public Real_data(final ViewContent viewContent) {
        this.viewContent = viewContent;
        api = viewContent.getApiOperation();
        creatUIRun();
        openTrans.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                new buyAndSell(viewContent);
            }
        });
        wt.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                new Entrust(viewContent);
            }
        });
    }

    private void creatUIRun() {
        ScheduledThreadPoolExecutor ste = viewContent.getApplicationContext().getBean("stpe", ScheduledThreadPoolExecutor.class);
        username.setText(api.getUserId());
        final JLabel[] jrr = new JLabel[]{top, low, open, RMB, BTB, DGRMB, DGBTB, nowprice, userprice};
        ste.scheduleAtFixedRate(new Runnable() {
            public void run() {
                try {
                    Get_account_info gai = ResultProxy.proxy(api.get_account_info(), Get_account_info.class);
                    Ticker_btc_json tbj = ResultProxy.proxy(api.TransactionReal(), Ticker_btc_json.class);
                    Ticker ticker = tbj.getTicker();
                    String[] srr = new String[jrr.length];
                    srr[0] = ticker.getHigh();
                    srr[1] = ticker.getLow();
                    srr[2] = ticker.getOpen();
                    srr[3] = gai.getAvailable_cny_display();
                    srr[4] = gai.getAvailable_btc_display();
                    srr[5] = gai.getFrozen_cny_display();
                    srr[6] = gai.getFrozen_btc_display();
                    srr[7] = ticker.getLast();
                    srr[8] = gai.getNet_asset();
                    for (int i = 0; i < srr.length; i++) {
                        SwingUtils.label_update_text(jrr[i], srr[i]);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }, 0, 1, TimeUnit.SECONDS);
    }

    public JPanel getContent() {
        return content;
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        content = new JPanel();
        content.setLayout(new GridBagLayout());
        L1 = new JLabel();
        L1.setText("用户：");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L1, gbc);
        username = new JLabel();
        username.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(username, gbc);
        L2 = new JLabel();
        L2.setText("净资产：");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L2, gbc);
        userprice = new JLabel();
        userprice.setPreferredSize(new Dimension(56, 18));
        userprice.setText("");
        userprice.putClientProperty("html.disable", Boolean.FALSE);
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(userprice, gbc);
        L3 = new JLabel();
        L3.setText("当前价格：");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L3, gbc);
        nowprice = new JLabel();
        nowprice.setPreferredSize(new Dimension(56, 19));
        nowprice.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(nowprice, gbc);
        L4 = new JLabel();
        L4.setText("最高价格：");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L4, gbc);
        top = new JLabel();
        top.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(top, gbc);
        L5 = new JLabel();
        L5.setText("最低价格：");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L5, gbc);
        low = new JLabel();
        low.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(low, gbc);
        L6 = new JLabel();
        L6.setText("开盘价:");
        L6.setToolTipText("开盘价");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L6, gbc);
        open = new JLabel();
        open.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(open, gbc);
        L11 = new JLabel();
        L11.setText("可用：");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.fill = GridBagConstraints.VERTICAL;
        content.add(L11, gbc);
        L12 = new JLabel();
        L12.setText("人民币：");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L12, gbc);
        RMB = new JLabel();
        RMB.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(RMB, gbc);
        L13 = new JLabel();
        L13.setText("比特币：");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L13, gbc);
        BTB = new JLabel();
        BTB.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(BTB, gbc);
        L21 = new JLabel();
        L21.setText("冻结：");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L21, gbc);
        L22 = new JLabel();
        L22.setText("人民币：");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L22, gbc);
        L23 = new JLabel();
        L23.setText("比特币：");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        content.add(L23, gbc);
        DGRMB = new JLabel();
        DGRMB.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(DGRMB, gbc);
        DGBTB = new JLabel();
        DGBTB.setText("");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        content.add(DGBTB, gbc);
        L33 = new JLabel();
        L33.setText("操作：");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.EAST;
        gbc.fill = GridBagConstraints.VERTICAL;
        content.add(L33, gbc);
        openTrans = new JButton();
        openTrans.setText("交易 ");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(openTrans, gbc);
        openZN = new JButton();
        openZN.setText("智能操作");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        content.add(openZN, gbc);
        wt = new JButton();
        wt.setText("委托");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        content.add(wt, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return content;
    }
}
